"""initial

Revision ID: ff63839fcf45
Revises: 
Create Date: 2023-09-16 05:29:09.489871

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ff63839fcf45'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('username', sa.String(length=128), nullable=True),
    sa.Column('full_name', sa.String(length=128), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('language', sa.String(length=10), server_default=sa.text("'en'"), nullable=False),
    sa.Column('referrer_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('questions',
    sa.Column('question_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('question_from', sa.BIGINT(), nullable=False),
    sa.Column('from_message_id', sa.BIGINT(), nullable=False),
    sa.Column('question_to', sa.BIGINT(), nullable=False),
    sa.Column('to_message_id', sa.BIGINT(), nullable=False),
    sa.Column('text', sa.String(length=4096), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['question_from'], ['users.user_id'], ondelete='NO ACTION'),
    sa.ForeignKeyConstraint(['question_to'], ['users.user_id'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('question_id'),
    sa.UniqueConstraint('from_message_id'),
    sa.UniqueConstraint('to_message_id')
    )
    op.create_table('users_blocked',
    sa.Column('user_blocked_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('blocked_user_id', sa.BIGINT(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['blocked_user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_blocked_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_blocked')
    op.drop_table('questions')
    op.drop_table('users')
    # ### end Alembic commands ###
